// begin DT determine product availability
// -- begin rule 'determine product availability 0'
package product_availability {
   use customer;
   use availability;
   rule determine_product_availability_0 {
      property ilog.rules.business_name = "determine product availability 1";
      property ilog.rules.dt = "product availability.determine product availability";
      property ilog.rules.group = "product_availability.determine_product_availability";
      property ilog.rules.package_name = "product availability";
      property status = "new";
      when {
         com.ibm.cloud.refarch.wcs.model.Customer() from customer;
         evaluate ((((customer.newZipCode.equals("6002")))));
      } then {
         availability.addProductCategories("ADSL,FIBRE");
      }
   }
}

// -- end rule 'determine product availability 0'
// -- begin rule 'determine product availability 1'
package product_availability {
   use customer;
   use availability;
   rule determine_product_availability_1 {
      property ilog.rules.business_name = "determine product availability 2";
      property ilog.rules.dt = "product availability.determine product availability";
      property ilog.rules.group = "product_availability.determine_product_availability";
      property ilog.rules.package_name = "product availability";
      property status = "new";
      when {
         com.ibm.cloud.refarch.wcs.model.Customer() from customer;
         evaluate ((((customer.newZipCode.equals("6003")))));
      } then {
         availability.addProductCategories("ADSL");
      }
   }
}

// -- end rule 'determine product availability 1'
// -- begin rule 'determine product availability 2'
package product_availability {
   use customer;
   use availability;
   rule determine_product_availability_2 {
      property ilog.rules.business_name = "determine product availability 3";
      property ilog.rules.dt = "product availability.determine product availability";
      property ilog.rules.group = "product_availability.determine_product_availability";
      property ilog.rules.package_name = "product availability";
      property status = "new";
      when {
         com.ibm.cloud.refarch.wcs.model.Customer() from customer;
         evaluate ((((customer.newZipCode.equals("6004")))));
      } then {
         availability.addProductCategories("FIBRE");
      }
   }
}

// -- end rule 'determine product availability 2'
// -- begin rule 'determine product availability 3'
package product_availability {
   use customer;
   use availability;
   rule determine_product_availability_3 {
      property ilog.rules.business_name = "determine product availability 4";
      property ilog.rules.dt = "product availability.determine product availability";
      property ilog.rules.group = "product_availability.determine_product_availability";
      property ilog.rules.package_name = "product availability";
      property status = "new";
      when {
         com.ibm.cloud.refarch.wcs.model.Customer() from customer;
         evaluate ((((customer.newZipCode.equals("6005")))));
      } then {
         availability.addProductCategories("ADSL.FIBRE");
      }
   }
}

// -- end rule 'determine product availability 3'
// -- begin rule 'determine product availability 4'
package product_availability {
   use customer;
   use availability;
   rule determine_product_availability_4 {
      property ilog.rules.business_name = "determine product availability 5";
      property ilog.rules.dt = "product availability.determine product availability";
      property ilog.rules.group = "product_availability.determine_product_availability";
      property ilog.rules.package_name = "product availability";
      property status = "new";
      when {
         com.ibm.cloud.refarch.wcs.model.Customer() from customer;
         evaluate (((!((((customer.newZipCode.equals("6002"))) || ((customer.newZipCode.equals("6003"))) || ((customer.newZipCode.equals("6004"))) || ((customer.newZipCode.equals("6005"))))))));
      } then {
         availability.addProductCategories("ADSL");
      }
   }
}

// -- end rule 'determine product availability 4'
// end DT determine product availability
